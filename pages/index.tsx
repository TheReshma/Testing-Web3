import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import snapshot from "@snapshot-labs/snapshot.js";
import { ethers } from "ethers";

const hub = "https://testnet.snapshot.org";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const client = new snapshot.Client712(hub);

  async function castVote() {
    const window: any = globalThis;
    const provider = new ethers.providers.Web3Provider(window?.ethereum);
    const signer = provider.getSigner();
    const account = await signer.getAddress();

    console.log(account);

    const receipt = await client.vote(provider, account, {
      space: "dumbo.eth",
      proposal:
        "0xadb8f2ed066682e83dedc7fdb929f81aab7edbb6f88e2a9075a3689250a88819",
      type: "single-choice",
      choice: 1,
      reason: "Choice 1 make lot of sense",
      app: "my-app",
    });

    console.log(receipt);
  }

  async function createProposal() {
    const window: any = globalThis;
    const provider = new ethers.providers.Web3Provider(window?.ethereum);
    const signer = provider.getSigner();
    const account = await signer.getAddress();

    console.log(account);
    console.log(new Date().getTime(), new Date().getTime());

    const receipt = await client.proposal(provider, account, {
      space: "dumbo.eth",
      type: "single-choice",
      title: "Test proposal 5",
      body: "This is the content of the proposal",
      choices: ["Alice", "Bob", "Carol"],
      start: Math.floor(new Date().getTime() / 1000),
      end: Math.floor((new Date().getTime() + 7200000) / 1000),
      snapshot: 16270668,
      network: "5",
      plugins: JSON.stringify({}),
      app: "my-app",
    } as any);

    console.log(receipt);
  }

  async function calculateScores() {
    const window: any = globalThis;
    const provider = new ethers.providers.Web3Provider(window?.ethereum);
    const signer = provider.getSigner();
    const account = await signer.getAddress();

    console.log(account);

    const space = "dumbo.eth";
    const strategies = [
      {
        name: "erc20-balance-of",
        params: {
          address: "0x326C977E6efc84E512bB9C30f76E30c160eD06FB",
          symbol: "LINK",
          decimals: 18,
        },
      },
    ] as any;
    const network = "5";
    const voters = [
      "0xd9a51042eBE9A428e362B36F12Bd332bB565deEa",
      "0xF06E4D857Fe806E5bEc7170cdE663496f0627251",
    ];
    const blockNumber = 8205426;

    snapshot.utils
      .getScores(space, strategies, network, voters, blockNumber)
      .then((scores) => {
        console.log("Scores", scores);
      });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className={styles.title}>gvjhgv</h1>
        <button onClick={castVote}>Cast Vote</button>
        <button onClick={createProposal}>Create Proposal</button>
        <button onClick={calculateScores}>Calculate scores</button>
      </main>
    </>
  );
}
